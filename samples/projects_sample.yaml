projects: 
    addCustomFieldSettingForProject: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Projects.addCustomFieldSettingForProject(projectGid, {field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
    addFollowersForProject: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Projects.addFollowersForProject(projectGid, {field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
    addMembersForProject: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Projects.addMembersForProject(projectGid, {field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
    createProject: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Projects.createProject({field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
    createProjectForTeam: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Projects.createProjectForTeam(teamGid, {field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
    createProjectForWorkspace: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Projects.createProjectForWorkspace(workspaceGid, {field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
    deleteProject: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Projects.deleteProject(projectGid)
            .then((result) => {
                console.log(result);
            });
    duplicateProject: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Projects.duplicateProject(projectGid, {field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
    getProject: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Projects.getProject(projectGid, {param: "value", param: "value", opt_pretty: true})
            .then((result) => {
                console.log(result);
            });
    getProjects: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Projects.getProjects({param: "value", param: "value", opt_pretty: true})
            .then((result) => {
                console.log(result);
            });
    getProjectsForTask: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Projects.getProjectsForTask(taskGid, {param: "value", param: "value", opt_pretty: true})
            .then((result) => {
                console.log(result);
            });
    getProjectsForTeam: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Projects.getProjectsForTeam(teamGid, {param: "value", param: "value", opt_pretty: true})
            .then((result) => {
                console.log(result);
            });
    getProjectsForWorkspace: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Projects.getProjectsForWorkspace(workspaceGid, {param: "value", param: "value", opt_pretty: true})
            .then((result) => {
                console.log(result);
            });
    getTaskCountsForProject: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Projects.getTaskCountsForProject(projectGid, {param: "value", param: "value", opt_pretty: true})
            .then((result) => {
                console.log(result);
            });
    removeCustomFieldSettingForProject: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Projects.removeCustomFieldSettingForProject(projectGid, {field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
    removeFollowersForProject: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Projects.removeFollowersForProject(projectGid, {field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
    removeMembersForProject: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Projects.removeMembersForProject(projectGid, {field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
    updateProject: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Projects.updateProject(projectGid, {field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
