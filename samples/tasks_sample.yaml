tasks: 
    addDependenciesForTask: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Tasks.addDependenciesForTask(taskGid, {field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
    addDependentsForTask: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Tasks.addDependentsForTask(taskGid, {field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
    addFollowersForTask: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Tasks.addFollowersForTask(taskGid, {field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
    addProjectForTask: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Tasks.addProjectForTask(taskGid, {field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
    addTagForTask: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Tasks.addTagForTask(taskGid, {field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
    createSubtaskForTask: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Tasks.createSubtaskForTask(taskGid, {field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
    createTask: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Tasks.createTask({field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
    deleteTask: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Tasks.deleteTask(taskGid)
            .then((result) => {
                console.log(result);
            });
    duplicateTask: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Tasks.duplicateTask(taskGid, {field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
    getDependenciesForTask: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Tasks.getDependenciesForTask(taskGid, {param: "value", param: "value", opt_pretty: true})
            .then((result) => {
                console.log(result);
            });
    getDependentsForTask: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Tasks.getDependentsForTask(taskGid, {param: "value", param: "value", opt_pretty: true})
            .then((result) => {
                console.log(result);
            });
    getSubtasksForTask: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Tasks.getSubtasksForTask(taskGid, {param: "value", param: "value", opt_pretty: true})
            .then((result) => {
                console.log(result);
            });
    getTask: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Tasks.getTask(taskGid, {param: "value", param: "value", opt_pretty: true})
            .then((result) => {
                console.log(result);
            });
    getTasks: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Tasks.getTasks({param: "value", param: "value", opt_pretty: true})
            .then((result) => {
                console.log(result);
            });
    getTasksForProject: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Tasks.getTasksForProject(projectGid, {param: "value", param: "value", opt_pretty: true})
            .then((result) => {
                console.log(result);
            });
    getTasksForSection: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Tasks.getTasksForSection(sectionGid, {param: "value", param: "value", opt_pretty: true})
            .then((result) => {
                console.log(result);
            });
    getTasksForTag: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Tasks.getTasksForTag(tagGid, {param: "value", param: "value", opt_pretty: true})
            .then((result) => {
                console.log(result);
            });
    getTasksForUserTaskList: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Tasks.getTasksForUserTaskList(userTaskListGid, {param: "value", param: "value", opt_pretty: true})
            .then((result) => {
                console.log(result);
            });
    removeDependenciesForTask: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Tasks.removeDependenciesForTask(taskGid, {field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
    removeDependentsForTask: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Tasks.removeDependentsForTask(taskGid, {field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
    removeFollowerForTask: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Tasks.removeFollowerForTask(taskGid, {field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
    removeProjectForTask: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Tasks.removeProjectForTask(taskGid, {field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
    removeTagForTask: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Tasks.removeTagForTask(taskGid, {field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
    searchTasksForWorkspace: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Tasks.searchTasksForWorkspace(workspaceGid, {param: "value", param: "value", opt_pretty: true})
            .then((result) => {
                console.log(result);
            });
    setParentForTask: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Tasks.setParentForTask(taskGid, {field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
    updateTask: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.Tasks.updateTask(taskGid, {field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
